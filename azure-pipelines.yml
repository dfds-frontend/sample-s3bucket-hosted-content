variables:
  - group: aws-deploy
  - name: bucket_name
    value: dfds-app-$(System.StageName)

resources:
  containers:
  - container: terraform-aws
    image: 'registry.gitlab.com/dfds-platform/docker-terraform-terragrunt:0.12'
    env: {
      AWS_PROFILE: $(AWS_PROFILE),
      SAML2AWS_USERNAME: $(SAML2AWS_USERNAME),
      SAML2AWS_PASSWORD: $(SAML2AWS_PASSWORD),
      SAML2AWS_ROLE: $(SAML2AWS_ROLE)
    }

stages:
- stage: staging
  jobs:
  - job: terraform_apply
    pool: 
      vmImage: 'ubuntu-latest'
    container: terraform-aws
    steps:
    - template: shared-steps-capability-login.yml
    - script: |
        cd infrastructure/environments/$(System.StageName)
        terragrunt apply --terragrunt-source-update --terragrunt-non-interactive -input=false -auto-approve
      displayName: Apply changes in AWS   
  
  - job: copy_files
    dependsOn: terraform_apply
    pool: 
      vmImage: 'ubuntu-latest'
    container: terraform-aws
    steps: # content-type is set to text/html. Since only file is copied, then it's ok. Otherwise there could be a need to adjust on file basis.
    - template: shared-steps-capability-login.yml
    - script: |
        cd app/dfds-app
        aws s3 rm s3://$(bucket_name) --recursive
        aws s3 cp src s3://$(bucket_name) --recursive --acl public-read --content-type "text/html"
      displayName: Copy app to S3 bucket